{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedStyles","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","item","Array","__","i","key","reduce","prevArr","currentEle","concat","length","Burger","buildControl","BurgerControl","Label","label","Less","deleted","disabled","More","add","controls","buildControls","BuildControls","price","toFixed","ctrl","BuildControl","addedIngredients","deletedIngredients","disable","OrderButton","ordered","purchasable","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientsSummary","igKey","textTransform","orderCancelled","orderContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptors","response","res","eject","resInterceptor","message","BurgerBuilder","ordering","loading","orderingHandler","orderCancelHandler","orderContinuedHandler","history","push","get","then","data","catch","sum","el","disabledInfo","ings","orderSummary","Spinner","onIngredientsAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutContinue","checkoutCancelled","input","inputElement","inputStyles","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","email","street","zipCode","minLength","maxLength","deliveryMethod","formIsValid","orderConfirmedHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","replace","inputChangeHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","path","match","component","ingredientsOutput","ig","display","border","padding","Order","orders","fetchedOrders","App","Orders","Boolean","window","location","hostname","initialState","bacon","cheese","meat","salad","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.225f86d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport styles from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className = {styles.Logo} style = {{ height : props.height}}>\n        <img src= {burgerLogo} alt = \"My burger\"/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n        <li className = {styles.NavigationItem}>\n            <NavLink\n                to = {props.link}\n                exact = {props.exact}\n                activeClassName = {styles.active}>\n                {props.children}\n            </NavLink>\n        </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport styles from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className = {styles.NavigationItems}>\n        <NavigationItem link =  \"/burger-my-app/\" exact> BurgerBuilder</NavigationItem>\n        <NavigationItem link = \"/orders\"  > Orders </NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport styles from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n        <div className = {styles.DrawerToggle} onClick = {props.clicked}>\n             <div> </div>\n             <div> </div>\n             <div> </div>\n         </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport styles from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n        <header className = {styles.Toolbar}>\n            <DrawerToggle clicked= {props.drawerToggleClicked} />\n            <div className = {styles.Logo}>\n                <Logo />\n            </div>\n            <nav className ={styles.DesktopOnly}>\n                <NavigationItems />\n            </nav>\n        </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport styles from './Backdrop.module.css';\n\n    const backdrop = (props) => (\n        props.show ? <div className = {styles.Backdrop} onClick = {props.clicked}> </div>  : null\n    );\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport styles from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n        let attachedStyles = [styles.SideDrawer, styles.Close];\n        if(props.open){\n            attachedStyles = [styles.SideDrawer, styles.Open];\n        }\n        return(\n                <Aux>\n                <Backdrop\n                        show = {props.open}\n                         clicked = { props.closed}/>\n                    <div className = {attachedStyles.join(' ')}>\n                        <div className = {styles.Logo}>\n                                <Logo />\n                        </div>\n                        <nav>\n                            <NavigationItems/>\n                        </nav>\n                    </div>\n                </Aux>\n        );\n}\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\nimport styles from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component{\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    sideDrawerToggleHandler = () => {\n            this.setState( (prevState) =>{\n            return {showSideDrawer: !prevState.showSideDrawer}\n            } );\n     }\n\n    render(){\n        return(\n            <Aux>\n                    <Toolbar drawerToggleClicked = {this.sideDrawerToggleHandler}/>\n                    <SideDrawer\n                        open = { this.state.showSideDrawer }\n                        closed = {this.sideDrawerClosedHandler} />\n                    <main className = {styles.Content}>\n                        {this.props.children}\n                     </main>\n            </Aux>\n        )\n    }\n}\n\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component{\n    render() {\n        let ingredient = null; //null because we won't render anything if something invalid is passed\n\n            switch (this.props.type) {\n            case('bread-bottom'):\n                ingredient = <div className = {styles.BreadBottom}> </div>;\n                break;\n            case('bread-top'):\n                ingredient = (\n                    <div className = {styles.BreadTop}>\n                        <div className = {styles.Seeds1}> </div>\n                        <div className = {styles.Seeds2}> </div>\n                    </div>\n                 );\n                 break;\n            case('meat'):\n                ingredient = <div className = {styles.Meat}> </div>;\n                break;\n            case('cheese'):\n                    ingredient = <div className = {styles.Cheese}> </div>;\n                break;\n            case('salad'):\n                    ingredient = <div className = {styles.Salad}> </div>;\n                break;\n            case('bacon'):\n                    ingredient = <div className = {styles.Bacon}> </div>;\n                break;\n            default :\n                ingredient = null;\n            }\n\n            return ingredient;\n    }\n}\n    BurgerIngredient.propTypes = {\n        type : PropTypes.string.isRequired\n    };\n\nexport default BurgerIngredient;\n","import React from 'react';\n\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n   let transformedIngredients = Object.keys(props.ingredients)\n        .map(item => {\n                //console.log(item);\n            return [...Array(props.ingredients[item])].map((__, i) => {\n               //console.log(props.ingredients[item]);\n              // console.log(item+i);// blank element\n              //  console.log(props.ingredients[item]);//index of element\n                return <BurgerIngredient key={item+i} type={item} />\n            } );\n        } )\n\n        .reduce((prevArr , currentEle) => {\n            return prevArr.concat(currentEle)\n        } ,[]);\n    //console.log(transformedIngredients);\n    if(transformedIngredients.length === 0){\n            transformedIngredients = <p> Please start adding ingredients! </p>\n    }\n\n    return(\n        <div className = {styles.Burger}>\n            <BurgerIngredient type = \"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type = \"bread-bottom\" />\n        </div>\n\n\n    );\n}\n\nexport default burger;","import React from 'react';\nimport styles from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className = {styles.BurgerControl}>\n        <div className = {styles.Label} > {props.label} </div>\n        <button className = {styles.Less} onClick = {props.deleted} disabled = {props.disabled}> Less </button>\n        <button className = {styles.More} onClick = {props.add}> More </button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport styles from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\n    const controls = [\n        {label : 'Bacon', type: 'bacon'},\n        {label : 'Cheese', type: 'cheese'},\n        {label : 'Meat', type: 'meat'},\n        {label : 'Salad', type: 'salad'},\n    ];\n\n    const buildControls = (props) => (\n        <div className = {styles.BuildControls}>\n            <p> Current Price : <strong> {props.price.toFixed(2)} </strong> </p>\n            {controls.map(ctrl => (\n                    <BuildControl\n                    key = {ctrl.label}\n                    label ={ctrl.label}\n                    add = {() => props.addedIngredients(ctrl.type)}\n                    deleted = {() => props.deletedIngredients(ctrl.type)}\n                    disabled = {props.disable[ctrl.type]}\n                    />\n                ))\n            }\n        <button\n            className = {styles.OrderButton}\n            onClick = {props.ordered}\n            disabled = {!props.purchasable}> ORDER NOW </button>\n        </div>\n    );\n\nexport default buildControls;","import React, { Component } from 'react';\nimport styles from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\n    class Modal extends Component {\n\n        shouldComponentUpdate(nextProps, nextState){\n            return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n        }\n\n        componentWillUpdate(){\n                    console.log('Modal will update');\n        }\n\n        render(){\n\n                return(\n                        <Aux>\n                                <Backdrop show = {this.props.show}  clicked = {this.props.modalClosed}/>\n                                <div className = {styles.Modal}\n                                    style = {{\n                                        transform : this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                                        opacity: this.props.show ? '1' : '0'\n                                    }}>\n                                    {this.props.children}\n                                 </div>\n                        </Aux>\n                );\n        }\n    }\n\nexport default Modal;","import React from 'react';\nimport styles from './Button.module.css';\n\n    const button = (props) => (\n        <button\n                disabled = {props.disabled}\n                className = {[styles.Button, styles[props.btnType]].join(' ')}\n                onClick = {props.clicked}>\n            {props.children}\n        </button>\n    );\n\nexport default button;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\n    class OrderSummary extends Component{\n        //This could be a functional component, doesn't have to be a Class\n        componentWillUpdate(){\n            console.log('Order summary will update');\n        }\n\n    render(){\n\n        const ingredientsSummary = Object.keys(this.props.ingredients)\n                .map(igKey => {\n                        return(\n                         <li key = {igKey}>\n                            <span style = {{textTransform: 'capitalize'}}>{igKey}</span> : {this.props.ingredients[igKey]}\n                        </li> );\n                 })\n\n\n        return(\n                <Aux>\n                            <h3> Your Order </h3>\n                            <p> Your yummy Burger with the following ingredients: </p>\n                            <ul>\n                                {ingredientsSummary}\n                            </ul>\n                            <p> <strong> Total Price: {this.props.price.toFixed(2)} </strong> </p>\n                            <p> Continue to Checkout? </p>\n                            <Button btnType = \"Danger\" clicked = {this.props.orderCancelled} > CANCEL </Button>\n                            <Button btnType = \"Success\" clicked = {this.props.orderContinued} > CONTINUE </Button>\n                </Aux>\n        );\n    }\n}\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL : 'https://react-my-burger-3321f.firebaseio.com/'\n});\n\nexport default instance;\n\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst spinner = () => (\n        <div className={styles.Loader} >Loading...</div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n const withErrorHandler = (WrappedComponent , axios) => {\n        return class extends Component {\n            state = {\n                error: null\n            }\n\n                componentWillMount () {\n                    this.reqInterceptor = axios.interceptors.request.use(req => {\n                            this.setState({error: null});\n                            return req;\n                    });\n                    this.resInterceptors = axios.interceptors.response.use(res => res, error =>{\n                            this.setState({error: error});\n                     });\n                }\n\n                componentWillUnmount () {\n                        //console.log('Will unmount' , this.reqInterceptor, this.resInterceptor);\n                        axios.interceptors.request.eject(this.reqInterceptor);\n                        axios.interceptors.response.eject(this.resInterceptor);\n                }\n\n                errorConfirmedHandler = () => {\n                    this.setState({ error : null})\n                }\n\n                render(){\n                        return(\n                                <Aux>\n                                    <Modal show = {this.state.error}\n                                           modalClosed ={this.errorConfirmedHandler} >\n                                           {this.state.error? this.state.error.message : null}\n                                    </Modal>\n                                    <WrappedComponent {...this.props} />\n                                </Aux>\n                        );\n                }\n        }\n  }\n\n export default withErrorHandler;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\n\n\nclass BurgerBuilder extends Component {\n    /*constructor(props) {\n        super(props);\n        this.state = { ... }\n    }*/\n    state = {\n        ordering : false,\n        loading : false,\n        error : false,\n    }\n\n    componentDidMount () {\n        //console.log(this.props);\n\n        axios.get('https://react-my-burger-3321f.firebaseio.com/ingredients.json')\n            .then(response => {\n                    this.setState({ ingredients : response.data});\n            })\n            .catch (error => {\n                this.setState({ error: true })\n            });\n    }\n\n    updatePurchaseState(ingredients){\n       let sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        })\n       .reduce((sum, el) => {\n            return sum + el\n       },0)\n       return sum > 0;\n    }\n\n    /*addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n                ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition  ;\n        this.setState({  totalPrice: newPrice , ingredients: updatedIngredients })\n        this.updatePurchaseState(updatedIngredients);\n     }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount<= 0){\n            return;\n        }\n        const newCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = newCount;\n\n        const oldPrice = this.state.totalPrice;\n        const priceADeduction = INGREDIENT_PRICES[type];\n        const newPrice = oldPrice - priceADeduction;\n        this.setState({ ingredients: updatedIngredients , totalPrice: newPrice })\n        this.updatePurchaseState(updatedIngredients);\n    }\n*/\n    orderingHandler = () => {\n        this.setState({ordering : true})\n    }\n\n    orderCancelHandler = () => {\n            this.setState({ordering : false})\n     }\n\n     orderContinuedHandler = () => {\n           // alert('You continued...');\n\n                /*const queryParams = [];\n                for(let i in this.state.ingredients){\n                    queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n                }\n                    queryParams.push('price='  + this.state.totalPrice);\n                const queryString = queryParams.join('&');\n                */\n                this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for(let key in disabledInfo){\n                disabledInfo[key] =  disabledInfo[key] <= 0\n        }\n        //{salad: true, bacon : false,...}\n        let orderSummary = null;\n\n        let burger = this.state.error ? <p> Ingredients cant be loaded </p> : <Spinner />\n\n        if(this.props.ings){\n        burger = (\n                <Aux>\n                    <Burger ingredients = {this.props.ings}/>\n                    <BuildControls\n                                        addedIngredients = {this.props.onIngredientsAdded}\n                                        deletedIngredients = {this.props.onIngredientRemoved}\n                                        disable = {disabledInfo}\n                                        price = {this.props.price}\n                                        purchasable = {this.updatePurchaseState(this.props.ings)}\n                                        ordered = {this.orderingHandler}/>\n                </Aux>\n         );\n         orderSummary = <OrderSummary\n                            ingredients = {this.props.ings}\n                            orderCancelled = {this.orderCancelHandler}\n                            orderContinued = {this.orderContinuedHandler}\n                            price = {this.props.price} />;\n        }\n        if(this.state.loading){\n              orderSummary = <Spinner />;\n        }\n\n        return(\n            <Aux>\n                <Modal show = {this.state.ordering}\n                        modalClosed ={this.orderCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                    {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings: state.ingredients,\n        price : state.totalPrice\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        onIngredientsAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved : (ingName) => dispatch({ type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (withErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\n","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport styles from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return(\n            <div className={styles.CheckoutSummary}>\n                <h1> We hope it tastes well !! </h1>\n                <div style = {{width:'100%', margin: 'auto'}}>\n                    <Burger ingredients = {props.ingredients}/>\n                    <Button\n                        btnType = \"Success\"\n                        clicked ={props.checkoutContinue}> CONTINUE\n                    </Button>\n                    <Button\n                        btnType = \"Danger\"\n                        clicked = {props.checkoutCancelled}> CANCEL\n                    </Button>\n                </div>\n            </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n\n    const inputStyles = [styles.InputElement];\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputStyles.push(styles.Invalid);\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input className = {inputStyles.join(' ')}\n                                    {...props.elementConfig}\n                                    value ={props.value}\n                                    onChange ={props.changed}/>;\n        break;\n        case('textarea'):\n            inputElement = <textarea className = {inputStyles.join(' ')}\n                                    {...props.elementConfig}\n                                    value ={props.value}\n                                    onChange ={props.changed}/>;\n        break;\n        case('select'):\n                    inputElement = (\n                                    <select\n                                        className = {inputStyles.join(' ')}\n                                        value ={props.value}\n                                        onChange ={props.changed}>\n                                            {props.elementConfig.options.map( option => (\n                                                <option\n                                                    key = {option.value}\n                                                    value = {option.value}>\n                                                     {option.displayValue}\n                                                </option>\n                                            ))}\n                                    </select>\n                                   );\n         break;\n         default:\n            inputElement = <input className = {styles.InputElement}\n                                    {...props.elementConfig}\n                                    value ={props.value}\n                                    onChange ={props.changed}/>;\n     }\n\n    return(\n        <div className = {styles.Input}>\n            <label className = {styles.Label}> {props.label} </label>\n            {inputElement}\n        </div>\n    );\n}\n\nexport default input;","import React , { Component } from 'react';\nimport axios from '../../../axios-orders';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport styles from './ContactData.module.css';\nimport Input from '../../../components/UI/Input/Input';\n\n//import Checkout from '../Checkout';\n\n    class ContactData extends Component{\n        state = {\n            orderForm: {\n                        name: {\n                            elementType: 'input',\n                            elementConfig: {\n                                type: 'text',\n                                placeholder: 'Your Name'\n                            },\n                            value: '',\n                            validation: {\n                                required: true,\n                            },\n                            valid: false,\n                            touched: false\n                        },\n                        email : {\n                                elementType: 'input',\n                                elementConfig: {\n                                    type: 'text',\n                                    placeholder: 'Your Email'\n                                },\n                                value: '',\n                                    validation: {\n                                        required: true,\n                                    },\n                                    valid: false,\n                                    touched: false\n                            },\n                        street:{\n                               elementType: 'input',\n                               elementConfig: {\n                                   type: 'text',\n                                   placeholder: 'Street'\n                               },\n                               value: '',\n                                    validation: {\n                                        required: true,\n                                    },\n                                    valid: false,\n                                    touched: false\n                           },\n                        zipCode: {\n                                 elementType: 'input',\n                                 elementConfig: {\n                                     type: 'text',\n                                     placeholder: 'Zip Code'\n                                 },\n                                 value: '',\n                                    validation: {\n                                        required: true,\n                                        minLength : 5,\n                                        maxLength : 5,\n                                    },\n                                    valid: false,\n                                    touched: false\n\n                            },\n                        deliveryMethod: {\n                                elementType: 'select',\n                                elementConfig: {\n                                    options: [\n                                        {value: 'fastest', displayValue: 'Fastest'},\n                                        {value: 'cheapest', displayValue: 'Cheapest'}\n                                        ]\n                                },\n                                value: 'fastest',\n                                valid: true,\n                                validation: {}\n                            },\n                     },\n            loading: false,\n            formIsValid: false\n        }\n\n    checkValidity(value, rules){\n        let isValid = true;\n\n        if(!rules){\n            return true;\n        }\n\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n     orderConfirmedHandler = (event) => {\n            event.preventDefault();\n            this.setState({loading : true})\n            let formData = {};\n                for(let formElementIdentifier in this.state.orderForm){\n                    formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n                }\n                       const order = {\n                                ingredients : this.props.ings,\n                                price : this.props.price,\n                                orderData: formData,\n\n                       }\n                        axios.post('/orders.json ' , order)\n                            .then (response =>{\n                                  this.setState({ loading : false })\n                                  this.props.history.replace('/');\n                            })\n                            .catch (error => {\n                                  this.setState({ loading : false })\n                            })\n     }\n\n     inputChangeHandler = (event ,inputIdentifier) => {\n        //console.log(inputIdentifier);\n        const updatedOrderForm = {\n                ...this.state.orderForm\n                };\n                const updatedFormElement= {\n                    ...updatedOrderForm[inputIdentifier]\n                };\n                //console.log(updatedFormItems);\n                updatedFormElement.value = event.target.value;\n                updatedFormElement.valid = this.checkValidity(updatedFormElement.value , updatedFormElement.validation )\n                updatedFormElement.touched = true;\n                //console.log(updatedFormElement);\n                updatedOrderForm[inputIdentifier] = updatedFormElement ;\n\n                let formIsValid = true;\n                for(let inputIdentifier in updatedOrderForm){\n                    formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n                }\n                console.log(formIsValid);\n\n                this.setState({orderForm: updatedOrderForm , formIsValid : formIsValid})\n     }\n\n    render(){\n        const formElementArray = [];\n        for(let key in this.state.orderForm){\n            formElementArray.push({\n                id: key,\n                config : this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit = {this.orderConfirmedHandler}>\n                    {formElementArray.map(formElement => (\n                       <Input\n                            key = {formElement.id}\n                            elementType = {formElement.config.elementType}\n                            elementConfig = {formElement.config.elementConfig}\n                            value = {formElement.config.value}\n                            invalid= {!formElement.config.valid}\n                            shouldValidate = {formElement.config.validation}\n                            touched = {formElement.config.touched}\n                            changed = {(event) => this.inputChangeHandler(event, formElement.id)}/>\n                    ))}\n                    <Button btnType = \"Success\" disabled ={!this.state.formIsValid} > ORDER </Button>\n            </form>\n        );\n        if(this.state.loading){\n           form = <Spinner />\n        }\n\n        return(\n                <div className = {styles.ContactData}>\n                    <h3> Enter your contact data </h3>\n                    {form}\n                </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings: state.ingredients,\n        price : state.totalPrice\n     }\n};\n\nexport default connect(mapStateToProps)(ContactData);","import React ,{Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component{\n    /*state = {\n        ingredients: null,\n        price: 0\n        }\n\n    componentWillMount() {\n        //console.log(this.props);\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let price = 0;\n        for(let itemAdded of query.entries()){\n            //['salad' , '1']\n            if(itemAdded[0] === 'price' ){\n                price = itemAdded[1];\n            }else{\n                 ingredients[itemAdded[0]] = +itemAdded[1];\n            }\n        }\n        this.setState({ingredients: ingredients , totalPrice : price});\n    }*/\n\n    checkoutCancelHandler = () => {\n            this.props.history.goBack();\n    }\n\n    checkoutContinueHandler = () => {\n            this.props.history.replace('/checkout/contact-data/');\n    }\n\n        render(){\n                return(\n                    <div>\n                        <CheckoutSummary ingredients ={this.props.ings}\n                        checkoutContinue = {this.checkoutContinueHandler}\n                        checkoutCancelled = {this.checkoutCancelHandler}/>\n                        <Route\n                               path = {this.props.match.path + '/contact-data'}\n                               component = {ContactData}/>\n                    </div>\n                );\n        }\n}\nconst mapStateToProps = state => {\n    return{\n        ings: state.ingredients\n     }\n};\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n        const ingredients =[];\n        for(let ingredientName in props.ingredients){\n                //console.log(props.ingredients);\n                ingredients.push(\n                    {\n                        name: ingredientName,\n                        value: props.ingredients[ingredientName]\n                    }\n                );\n                //console.log(props.ingredients[ingredientName]);\n         }\n        const ingredientsOutput = ingredients.map(ig => {\n            return <span\n                    style = {{\n                        textTransform: 'capitalize',\n                        display: 'inline-block',\n                        margin:'0 8px',\n                       border: '1px solid #ccc',\n                       padding: '5px'\n                    }}\n                key = {ig.name} >\n                {ig.name} ({ig.value})\n                 </span>;\n        });\n\n        return(\n            <div className = {styles.Order}>\n                <p> Ingredients: {ingredientsOutput}</p>\n                <p> Price: <strong> {props.price.toFixed(2)}</strong></p>\n            </div>\n        );\n }\n\n\nexport default order;","import React , { Component } from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n    class Orders extends Component{\n        state = {\n            orders : [],\n            loading : true\n        }\n\n        componentDidMount(){\n            axios.get('/orders.json')\n                .then(response => {\n                    const fetchedOrders= [];\n                    for(let key in response.data){\n                        fetchedOrders.push({\n                           ...response.data[key],\n                           id: key\n                       });\n                       //console.log('response-data-key' +response.data[key]);\n                    }\n                       //console.log('fetchedOrders:'+ fetchedOrders);\n                       //console.log(response.data);\n\n                       this.setState({loading: false, orders: fetchedOrders});\n                })\n                .catch(error => {\n                    this.setState({loading: false});\n                })\n        }\n\n        render(){\n\n\n            return(\n                <div>\n                    {this.state.orders.map(order => (\n                            <Order\n                                key = {order.id}\n                                ingredients = {order.ingredients}\n                                price = {+order.price}\n                                />\n                     ))}\n                </div>\n            );\n        }\n    }\n\nexport default withErrorHandler(Orders, axios);","import React, {Component} from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout.js';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\n\nclass App extends Component {\n    /*state = {\n        show: true\n    };\n\n    componentDidMount(){\n        setTimeout( () => {\n            this.setState({ show: false});\n        }, 5000);\n    } */\n      /*Add in between Layout below-  {this.state.show ? <BurgerBuilder/> : null} */\n\n    render(){\n        return (\n            <div>\n                <Layout>\n                    <Switch>\n                        <Route path = \"/burger-my-app/checkout\" component = {Checkout} />\n                        <Route path = \"/burger-my-app/orders\"  component = {Orders} />\n                        <Route path = \"/burger-my-app/\" exact component = {BurgerBuilder} />\n                    </Switch>\n                  </Layout>\n            </div>\n          );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions.js';\n\nconst initialState = {\n     ingredients : {\n        bacon : 0,\n        cheese: 0,\n        meat: 0,\n        salad: 0,\n     },\n     totalPrice: 4\n};\nconst INGREDIENT_PRICES = {\n        bacon : 0.4,\n        cheese : 0.5,\n        meat : 1.3,\n        salad : 0.8\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                    ...state,\n                    ingredients:{\n                        ...state.ingredients,\n                        [action.ingredientName] : state.ingredients[action.ingredientName] + 1\n                    },\n                    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return{\n                    ...state,\n                    ingredients:{\n                        ...state.ingredients,\n                        [action.ingredientName] : state.ingredients[action.ingredientName] - 1\n                    },\n                    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\n    const store = createStore(reducer);\n\n    const app = (\n            <Provider store = {store}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </Provider>\n    );\n\nReactDOM.render(\n  <React.StrictMode>\n   {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}